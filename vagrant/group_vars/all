###
### Interfaces, IP addresses and network ports
###

# Define the roles of the various 'physical' interfaces on the VMs
kafka_mgmt_interface: "eth0"
kafka_service_interface: "eth1"

# Define the IP addresses for those interfaces
kafka_mgmt_ip_address: "{{ hostvars[inventory_hostname]['ansible_' + kafka_mgmt_interface].ipv4.address }}"
kafka_service_ip_address: "{{ hostvars[inventory_hostname]['ansible_' + kafka_service_interface].ipv4.address }}"

# Define the various network ports for the applications
port_kafka_broker: 9092
port_kafka_connect: 8083
port_kafka_rest_proxy: 8082
port_kafka_schema_registry: 8081
port_zookeeper: 2181


###
### Security
###

# Kafka security protocol (Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL)
# Wether to use encryption or not on connections to brokers and connectors
kafka_generic_security_protocol: "PLAINTEXT"


###
### Zookeeper
###

# Zookeeper datadir
zookeeper_datadir: "/var/lib/zookeeper"

# Zookeeper list of hosts (e.g.: 172.28.129.201:2181,172.28.129.202:2181,172.28.129.203:2181)
kafka_zookeeper_connect: "
{%- for node in vars['ansible_play_hosts'] | intersect(groups['kafka_brokers']) -%}
{{ node }}:{{ port_zookeeper }}{% if not loop.last %},{% endif %}
{%- endfor%}
"

# Zookeeper multiline server config in zookeeper.properties file
NEWLINE: "\n"
zookeeper_properties_server_multiline_config: "{% for server in vars['ansible_play_hosts'] %}server.{{loop.index}}={{server}}:{{kafka_server_zookeeper_leaderport}}:{{kafka_server_zookeeper_electionport}}{{ NEWLINE }}{% endfor %}"



###
### Kafka - bootstrap servers etc
###

# Example content: "172.28.129.221:9092,172.28.129.222:9092,172.28.129.223:9092"
kafka_bootstrap_servers: "
{%- for node in vars['ansible_play_hosts'] | intersect(groups['kafka_brokers']) -%}
{{ node }}:{{ port_kafka_broker }}{% if not loop.last %},{% endif %}
{%- endfor %}
"

# Example content: "172.28.129.201, 172.28.129.202, 172.28.129.203  "
kafka_broker_ips: "
{%- for node in vars['ansible_play_hosts'] | intersect(groups['kafka_brokers']) -%}
{{ node }}{% if not loop.last %},{% endif %}
{%- endfor %}
"

# Example content: "172.28.129.204, 172.28.129.205  "
kafka_workernode_ips: "
{%- for node in vars['ansible_play_hosts'] | intersect(groups['kafka_worker_nodes']) -%}
{{ node }}{% if not loop.last %},{% endif %}
{%- endfor %}
"

###
### MySQL settings
###

#Username password for schema used by the JDBC connector
jdbc_username:      'admin'
jdbc_password:      'admin'
jdbc_database:      'hello_world'

#Hostname and port for database
jdbc_host:          "{{ groups['mysql_db'][0] }}"
jdbc_port:          3306


###
### Other, non-critical files
###

### /etc/kafka/consumer.properties
#
kafka_consumer_bootstrap_servers: "{{ kafka_service_ip_address }}:9092"
kafka_consumer_group_id: "test-consumer-group"

# /etc/kafka/producer.properties
#
kafka_producer_bootstrap_servers: "{{ kafka_service_ip_address }}:9092"
kafka_producer_compression_type: "snappy"


###
### Ansible playbook purposes
###

# Timeout used in ansible playbooks to determine how long to wait for port x to become available
wait_for_timeout: 180
