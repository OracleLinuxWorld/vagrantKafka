#!/bin/bash

#
### BEGIN INIT INFO
# Provides:          kafka
# Short-Description: Start and stop the kafka services
# Description:       Start and stop the kafka services
### END INIT INFO
#

set -e
set -u
${DEBIAN_SCRIPT_DEBUG:+ set -v -x}

SELF=$(cd $(dirname $0); pwd -P)/$(basename $0)

# Safeguard (relative paths, core dumps..)
cd /
umask 077

#
# main()
#

case "${1:-''}" in
  'start-zookeeper')
        echo "Start ZooKeeper..."
	      echo ""
	      su -l {{ kafka_username }} -c '/bin/zookeeper-server-start /etc/kafka/zookeeper.properties & 2>&1 > /dev/null'
        ;;

  'start-kafkaserver')
        echo "Start Kafka server..."
      	echo ""
      	su -l {{ kafka_username }} -c '/bin/kafka-server-start /etc/kafka/server.properties & 2>&1 > /dev/null'
        ;;

  'start-schema-registry')
        echo "Start Schema Registry..."
        echo ""
        su -l {{ kafka_username }} -c '/bin/schema-registry-start /etc/schema-registry/schema-registry.properties & 2>&1 > /dev/null'
        ;;

  'start-kafka-rest')
        echo "Start Kafka REST..."
        echo ""
        su -l {{ kafka_username }} -c '/bin/kafka-rest-start /etc/kafka-rest/kafka-rest.properties & 2>&1 > /dev/null'
        ;;

  'start-kafka-connect')
        echo "Start Kafka Connect (distributed)... This may take a couple of minutes..."
        echo ""
        su -l {{ kafka_username }} -c '/bin/connect-distributed /etc/kafka/connect-distributed.properties & 2>&1 > /dev/null'
        ;;

  'start')
        echo "Start all services..."
      	echo ""
      	$SELF start-zookeeper
        sleep 3
      	$SELF start-kafkaserver
        sleep 3
        $SELF start-schema-registry
        sleep 3
        $SELF start-kafka-rest
        ;;

  'stop-zookeeper')
        echo "Stop ZooKeeper..."
        echo ""
        su -l {{ kafka_username }} -c '/bin/zookeeper-server-stop'
        ;;

  'stop-kafkaserver')
        echo "Stop Kafka server..."
      	echo ""
      	su -l {{ kafka_username }} -c '/bin/kafka-server-stop'
        ;;

  'stop-schema-registry')
        echo "Stop Schema Registry..."
        echo ""
        su -l {{ kafka_username }} -c '/bin/schema-registry-stop'
        ;;

  'stop-kafka-rest')
        echo "Stop Kafka REST..."
        echo ""
        su -l {{ kafka_username }} -c '/bin/kafka-rest-stop'
        ;;

  'stop')
        echo "Stop all services..."
      	echo ""
        $SELF stop-schema-registry
        $SELF stop-kafkaserver
      	$SELF stop-zookeeper
        ;;


  'check-rest-api')
        echo "Check REST API..."
        echo ""
        su -l {{ kafka_username }} -c 'curl -s http://localhost:8083/ | jq '.''
        ;;

  'check-connector-plugins')
        echo "Check Connector plugins..."
        echo ""
        su -l {{ kafka_username }} -c 'curl -s http://127.0.0.1:8083/connector-plugins | jq '.''
        ;;

  'get-topics')
        echo "Get topics..."
        echo ""
        su -l {{ kafka_username }} -c 'curl -s http://127.0.0.1:8082/topics | jq '.''
        ;;





  'restart')
        echo "Restart ALL services"
        echo ""
	      set +e; $SELF stop; set -e
   	    $SELF stop
	      $SELF start
	      ;;

  *)
  echo ""
  echo "Most common options: $SELF start|stop|restart"
  echo ""
  echo "Additional options:"
  echo ""
  echo "start-zookeeper           : Start the Confluent ZooKeeper cluster manager."
  echo "start-kafkaserver         : Start the Confluent Kafka broker instance."
  echo "start-schema-registry     : Start the Confluent Schema Registry."
  echo "start-kafka-rest          : Start the Confluent Kafka REST service."
  echo "start-kafka-connect       : Start the Confluent Kafka Connector (distributed)."
  echo ""
  echo "stop-zookeeper            : Stop the Confluent ZooKeeper cluster manager."
  echo "stop-kafkaserver          : Stop the Confluent Kafka broker instance."
  echo "stop-schema-registry      : Stop the Confluent Schema Registry."
  echo "stop-kafka-rest           : Stop the Confluent Kafka REST service."
  echo ""
  echo "check-rest-api            : Check if the REST API is functioning."
  echo "check-connector-plugins   : Check which connector plugins are available."
  echo ""
  echo "get-topics                : Get list of topics."
	exit 1
	;;
esac

exit 0
